apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "2.0.0"

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions{
        abortOnError false
    }

}

def siteUrl = 'https://github.com/hongyangAndroid/okhttp-utils'                        // #CONFIG# // project homepage
def gitUrl = 'https://github.com/hongyangAndroid/okhttp-utils.git'                     // #CONFIG# // project git
group = "com.zhy"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'okhttputils'                                   // #CONFIG# // project title
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'hongyangAndroid'                                           // #CONFIG# // your user id (you can write your nickname)
                        name 'ZhangHongyang'                                       // #CONFIG# // your user name
                        email '623565791@qq.com'                               // #CONFIG# // your email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "okhttputils"                                                 // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}


//定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
def makeJar(String target,String classDir){
    exec{
        executable "jar"   //调用jar
        args "cvf",target
        args "-C", classDir
        args "","."


    }
}

//新建一个task,名为buildLib,依赖build(build是一个自带的task)
task buildLib(dependsOn:['build'])<< {
    makeJar("okhttputils.jar","build/intermediates/classes/release")
}

task clearJar(type: Delete) {
    delete 'build/outputs/okhttputils.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', 'okhttputils.jar')
}

makeJar.dependsOn(clearJar, build)



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.squareup.okhttp:okhttp:2.5.0'
}
